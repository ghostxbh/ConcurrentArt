<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.uzykj.mall.dao.ExpertAuditMapper">
  <resultMap id="BaseResultMap" type="com.uzykj.mall.pojo.ExpertAudit">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_phone" jdbcType="CHAR" property="userPhone" />
    <result column="req_type" jdbcType="CHAR" property="reqType" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="audit_time" jdbcType="TIMESTAMP" property="auditTime" />
    <result column="auditor_id" jdbcType="INTEGER" property="auditorId" />
    <result column="audit_remarks" jdbcType="VARCHAR" property="auditRemarks" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.uzykj.mall.pojo.ExpertAudit">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, user_phone, req_type, status, audit_time, auditor_id, audit_remarks, 
    create_time
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from expert_audit
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from expert_audit
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.uzykj.mall.pojo.ExpertAudit">
    insert into expert_audit (id, user_id, user_phone, 
      req_type, status, audit_time, 
      auditor_id, audit_remarks, create_time, 
      content)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{userPhone,jdbcType=CHAR}, 
      #{reqType,jdbcType=CHAR}, #{status,jdbcType=CHAR}, #{auditTime,jdbcType=TIMESTAMP}, 
      #{auditorId,jdbcType=INTEGER}, #{auditRemarks,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.uzykj.mall.pojo.ExpertAudit">
    insert into expert_audit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userPhone != null">
        user_phone,
      </if>
      <if test="reqType != null">
        req_type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="auditTime != null">
        audit_time,
      </if>
      <if test="auditorId != null">
        auditor_id,
      </if>
      <if test="auditRemarks != null">
        audit_remarks,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userPhone != null">
        #{userPhone,jdbcType=CHAR},
      </if>
      <if test="reqType != null">
        #{reqType,jdbcType=CHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="auditTime != null">
        #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditorId != null">
        #{auditorId,jdbcType=INTEGER},
      </if>
      <if test="auditRemarks != null">
        #{auditRemarks,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.uzykj.mall.pojo.ExpertAudit">
    update expert_audit
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userPhone != null">
        user_phone = #{userPhone,jdbcType=CHAR},
      </if>
      <if test="reqType != null">
        req_type = #{reqType,jdbcType=CHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="auditTime != null">
        audit_time = #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditorId != null">
        auditor_id = #{auditorId,jdbcType=INTEGER},
      </if>
      <if test="auditRemarks != null">
        audit_remarks = #{auditRemarks,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.uzykj.mall.pojo.ExpertAudit">
    update expert_audit
    set user_id = #{userId,jdbcType=INTEGER},
      user_phone = #{userPhone,jdbcType=CHAR},
      req_type = #{reqType,jdbcType=CHAR},
      status = #{status,jdbcType=CHAR},
      audit_time = #{auditTime,jdbcType=TIMESTAMP},
      auditor_id = #{auditorId,jdbcType=INTEGER},
      audit_remarks = #{auditRemarks,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.uzykj.mall.pojo.ExpertAudit">
    update expert_audit
    set user_id = #{userId,jdbcType=INTEGER},
      user_phone = #{userPhone,jdbcType=CHAR},
      req_type = #{reqType,jdbcType=CHAR},
      status = #{status,jdbcType=CHAR},
      audit_time = #{auditTime,jdbcType=TIMESTAMP},
      auditor_id = #{auditorId,jdbcType=INTEGER},
      audit_remarks = #{auditRemarks,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.uzykj.mall.dao.LogUserLoginsMapper">
  <resultMap id="BaseResultMap" type="com.uzykj.mall.pojo.LogUserLogins">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="login_time" jdbcType="TIMESTAMP" property="loginTime" />
    <result column="login_ip" jdbcType="VARCHAR" property="loginIp" />
    <result column="login_src" jdbcType="CHAR" property="loginSrc" />
    <result column="login_remark" jdbcType="VARCHAR" property="loginRemark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, login_time, login_ip, login_src, login_remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from log_user_logins
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from log_user_logins
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.uzykj.mall.pojo.LogUserLogins">
    insert into log_user_logins (id, user_id, login_time, 
      login_ip, login_src, login_remark
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{loginTime,jdbcType=TIMESTAMP}, 
      #{loginIp,jdbcType=VARCHAR}, #{loginSrc,jdbcType=CHAR}, #{loginRemark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.uzykj.mall.pojo.LogUserLogins">
    insert into log_user_logins
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="loginIp != null">
        login_ip,
      </if>
      <if test="loginSrc != null">
        login_src,
      </if>
      <if test="loginRemark != null">
        login_remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginIp != null">
        #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginSrc != null">
        #{loginSrc,jdbcType=CHAR},
      </if>
      <if test="loginRemark != null">
        #{loginRemark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.uzykj.mall.pojo.LogUserLogins">
    update log_user_logins
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginIp != null">
        login_ip = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginSrc != null">
        login_src = #{loginSrc,jdbcType=CHAR},
      </if>
      <if test="loginRemark != null">
        login_remark = #{loginRemark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.uzykj.mall.pojo.LogUserLogins">
    update log_user_logins
    set user_id = #{userId,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      login_ip = #{loginIp,jdbcType=VARCHAR},
      login_src = #{loginSrc,jdbcType=CHAR},
      login_remark = #{loginRemark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>